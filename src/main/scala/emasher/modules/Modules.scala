package emasher.modules

import emasher.api.ModuleRegistry
import emasher.util.Config
import scala.collection.JavaConversions._
import emasher.util.Config._

object Modules {
  def register(): Unit = {
    ModuleRegistry.registerModule( new ModBlank( 0 ) )
    ModuleRegistry.registerModule( new ModItemInput( 1 ) )
    ModuleRegistry.registerModule( new ModItemOutput( 2 ) )
    ModuleRegistry.registerModule( new ModItemExtractor( 3 ) )
    ModuleRegistry.registerModule( new ModFluidInput( 4 ) )
    ModuleRegistry.registerModule( new ModFluidOutput( 5 ) )
    ModuleRegistry.registerModule( new ModFluidExtractor( 6 ) )
    ModuleRegistry.registerModule( new ModEnergyInput( 7 ) )
    ModuleRegistry.registerModule( new ModEnergyOutput( 8 ) )
    ModuleRegistry.registerModule( new ModMultiInput( 9 ) )
    ModuleRegistry.registerModule( new ModMultiOutput( 10 ) )
    ModuleRegistry.registerModule( new ModItemDistributor( 13 ) )
    ModuleRegistry.registerModule( new ModFluidDistributor( 14 ) )
    ModuleRegistry.registerModule( new ModItemEjector( 15 ) )
    ModuleRegistry.registerModule( new ModRSInput( 16 ) )
    ModuleRegistry.registerModule( new ModRSOutput( 17 ) )
    ModuleRegistry.registerModule( new ModRSAND( 18 ) )
    ModuleRegistry.registerModule( new ModRSOR( 19 ) )
    ModuleRegistry.registerModule( new ModRSNOT( 20 ) )
    ModuleRegistry.registerModule( new ModRSNAND( 21 ) )
    ModuleRegistry.registerModule( new ModRSNOR( 22 ) )
    ModuleRegistry.registerModule( new ModRSXOR( 23 ) )
    ModuleRegistry.registerModule( new ModRSXNOR( 24 ) )
    ModuleRegistry.registerModule( new ModLatchToggle( 32 ) )
    ModuleRegistry.registerModule( new ModLatchSet( 33 ) )
    ModuleRegistry.registerModule( new ModLatchReset( 34 ) )
    ModuleRegistry.registerModule( new ModTimer( 35 ) )
    ModuleRegistry.registerModule( new ModDelayer( 36 ) )
    ModuleRegistry.registerModule( new ModStateCell( 37 ) )
    ModuleRegistry.registerModule( new ModPressurePlate( 38 ) )
    ModuleRegistry.registerModule( new ModSpinningWheel( 39 ) )
    ModuleRegistry.registerModule( new ModHinge( 40 ) )
    ModuleRegistry.registerModule( new ModEnderHinge( 41 ) )
    ModuleRegistry.registerModule( new ModLazySusan( 42 ) )
    ModuleRegistry.registerModule( new ModElevator( 43 ) )
    ModuleRegistry.registerModule( new ModInternalClock( 44 ) )
    ModuleRegistry.registerModule( new ModTrack( 45 ) )
    ModuleRegistry.registerModule( new ModAccelerometer( 46 ) )
    ModuleRegistry.registerModule( new ModMagnet( 47, "eng_toolbox:magnet" ) )
    ModuleRegistry.registerModule( new ModMagnetInput( 48 ) )
    ModuleRegistry.registerModule( new ModMagnetOutput( 49 ) )
    ModuleRegistry.registerModule( new ModBurner( 64 ) )
    ModuleRegistry.registerModule( new ModBreaker( 65 ) )
    if ( enableWaterIntake ) ModuleRegistry.registerModule( new ModOsPump( 66 ) )
    ModuleRegistry.registerModule( new ModSpring( 67 ) )
    ModuleRegistry.registerModule( new ModDFBlade( 68 ) )
    ModuleRegistry.registerModule( new ModVacuum( 69 ) )
    ModuleRegistry.registerModule( new ModAdvancedBreaker( 70 ) )
    ModuleRegistry.registerModule( new ModFurnace( 71 ) )
    if ( enableGrinder ) ModuleRegistry.registerModule( new ModGrinder( 72 ) )
    ModuleRegistry.registerModule( new ModEnergyIndicator( 73 ) )
    ModuleRegistry.registerModule( new ModEnergyExpansion( 74 ) )
    if ( enableSolars ) ModuleRegistry.registerModule( new ModSolar( 75 ) )
    ModuleRegistry.registerModule( new ModButton( 76 ) )
    ModuleRegistry.registerModule( new ModBUD( 78 ) )
    ModuleRegistry.registerModule( new ModAdvancedEnergyExpansion( 79 ) )
    ModuleRegistry.registerModule( new ModWaterCooler( 80 ) )
    ModuleRegistry.registerModule( new ModFreezer( 81 ) )
    ModuleRegistry.registerModule( new ModLavaIntake( 82 ) )
    if ( enablePiezo ) ModuleRegistry.registerModule( new ModPiezo( 83 ) )
    if ( enableHydro ) ModuleRegistry.registerModule( new ModWaterMill( 84 ) )
    ModuleRegistry.registerModule( new ModSelfDestruct( 85 ) )
    ModuleRegistry.registerModule( new ModItemDisplay( 86 ) )
    ModuleRegistry.registerModule( new ModTankDisplay( 87 ) )
    ModuleRegistry.registerModule( new ModCharger( 88 ) )
    ModuleRegistry.registerModule( new ModBlockPlacer( 89 ) )
    ModuleRegistry.registerModule( new ModMachineOutput( 90 ) )
    if ( enableKiln ) ModuleRegistry.registerModule( new ModKiln( 91 ) )
    if ( enableMultiSmelter ) ModuleRegistry.registerModule( new ModMultiSmelter( 92 ) )
    if ( enableCentrifuge ) ModuleRegistry.registerModule( new ModCentrifuge( 93 ) )
    ModuleRegistry.registerModule( new ModMixer( 94 ) )
    ModuleRegistry.registerModule( new ModPressurizer( 95 ) )
    ModuleRegistry.registerModule( new ModRangeSelector( 96 ) )
    if ( enableHusher ) ModuleRegistry.registerModule( new ModHusher( 97 ) )
    ModuleRegistry.registerModule( new ModStirlingGenerator( 98 ) )
    ModuleRegistry.registerModule( new ModPump( 99 ) )
    ModuleRegistry.registerModule( new ModFracker( 100 ) )
    ModuleRegistry.registerModule( new ModPhotobioReactor( 101 ) )
    ModuleRegistry.registerModule( new ModFan( 102 ) )
    ModuleRegistry.registerModule( new ModGasVent( 103 ) )
    ModuleRegistry.registerModule( new ModExhaust( 104 ) )
    ModuleRegistry.registerModule( new ModGasGenerator( 105 ) )
    ModuleRegistry.registerModule( new ModGasTurbine( 106 ) )
    ModuleRegistry.registerModule( new ModRefinery( 107 ) )
    ModuleRegistry.registerModule( new ModPlasmaReactor( 108 ) )
    if( Config.allowMicrocontrollers ) ModuleRegistry.registerModule( new ModMicrocontroller( 109 ) )
    ModuleRegistry.registerModule( new ModRummager( 110 ) )

    //Register 3rd party modules
    for ( reg <- ModuleRegistry.registers ) {
      reg.registerModules()
    }
  }
}
